version: "3.9"
services:
  practice-app:
    container_name: practice-app
    build:
      context: ./practice
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://psql-db:5432/practice
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=admin
    networks:
      - practice
    depends_on:
      - psql-db

  psql-db:
    container_name: psql-db
    image: "postgres:15"
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: "practice"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "admin"
    volumes:
      - postgres-db:/var/lib/postgresql/data
    networks:
      - practice

  practice-ui:
    container_name: practice-ui
    build:
      context: ./practice-ui
      dockerfile: Dockerfile
    ports:
      - "4200:4200"
    expose:
      - "4200"
    environment:
      - MOD=dev
    volumes:
      - ./practice-ui:/app/practice-ui
      - /app/practice-ui/node_modules
    depends_on:
      - practice-app
    networks:
      - practice

  postgres:
    image: postgres:16.2
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - practice

  keycloak:
    image: quay.io/keycloak/keycloak:24.0.2
    command: start
    environment:
      KC_HOSTNAME: localhost
      KC_HOSTNAME_PORT: 8080
      KC_HOSTNAME_STRICT_BACKCHANNEL: false
      KC_HTTP_ENABLED: true
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_HEALTH_ENABLED: true
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres/${POSTGRES_DB}
      KC_DB_USERNAME: ${POSTGRES_USER}
      KC_DB_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - 8080:8080
    restart: always
    depends_on:
      - postgres
    networks:
      - practice

networks:
  practice:
    driver: bridge

volumes:
  postgres-db:
    driver: local
  postgres_data:
    driver: local
